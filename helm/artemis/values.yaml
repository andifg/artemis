nameOverride: ""
fullnameOverride: ""


ingress:
  hostname: test.mygreendays.de
  tls:
    secretName: artemis-tls-secret

backend:
  log_level: "info"
  containerPort: 8000
  replicaCount: 1
  image:
    name: ""
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  DatabaseHost: "artemis-postgresql.meat-meater-dev.svc.cluster.local"
  DatabasePort: "5432"
  KeycloakClientID: "artemis"
  KeycloakRealm: "artemis"
  KeycloakRealmRedirectPath: /api/v1/login
  KeycloakURL: ""
  KeycloakCertPath: ""
  FrontendOrigin: ""


postgresql:
  auth:
    existingSecret: artemis-database-access
    database: "artemis"
    username: "artemis"
    secretKeys:
      userPasswordKey: postgres-password

frontend:
  containerPort: 8080
  service:
    type: ClusterIP
    port: 80
  image:
    name: ""
    pullPolicy: IfNotPresent

keycloak:
  nameOverride: keycloak
  fullnameOverride: keycloak
  production: true
  proxy: edge

  podSecurityContext:
    enabled: false


  extraStartupArgs: "--import-realm"


  containerSecurityContext:
    enabled: false

  extraVolumes:
    - name: inital-realm
      configMap:
        name: keycloak-realm-import

  extraVolumeMounts:
    - name: inital-realm
      mountPath: /opt/bitnami/keycloak/data/import/

  extraEnvVars:
    - name: ARTEMIS_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: artemis-keycloak-client
          key: secret

  auth:
    adminUser: admin
    existingSecret: artemis-keycloak-postgres


  ingress:
    enabled: true
    hostname: auth.test.mygreendays.de
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt

    extraTls:
      - hosts:
          # Make sure its same as ingress.hostname
          - auth.test.mygreendays.de
        secretName: keycloak-tls

  postgresql:
    fullnameOverride: keycloak-postgresql
    nameOverride: keycloak-postgresql
    primary:
      persistence:
        existingClaim: data-mount-keycloak-postgresql-0
    #   podSecurityContext:
    #     enabled: false
    #   containerSecurityContext:
    #     enabled: false
    auth:
      existingSecret: artemis-keycloak-postgres
      secretKeys:
        userPasswordKey: admin-password
        adminPasswordKey: admin-password


serviceAccount:
  create: true


podAnnotations: {}
podSecurityContext: {}
securityContext: {}

nodeSelector: {}
tolerations: []
affinity: {}
autoscaling: {}